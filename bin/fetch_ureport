#!/usr/bin/env node
var request   = require("request");
var firebase = require("firebase");
var fb_config = require('../firebase_service_account')
// Initialize the app with a custom auth variable, limiting the server's access
firebase.initializeApp({
  serviceAccount: fb_config,
  databaseURL: "https://innovation-fund2.firebaseio.com"
});

var db = firebase.database();
var fb = "ureport_all/orgs/";
var refUpdate = db.ref("last_updated_ureport")
var orgs = [];

function get_url(url){
  return new Promise(function(resolve, reject){
    request({
        url: url,
        json: true
    }, function (error, response, body) {
      if (!error && response.statusCode === 200) {
        orgs.push(body.results)
        resolve([body.next || false, orgs]);
      }
    })
  })
};

function fetch_source(url, orgs){
  return new Promise(function(resolve, reject){
    get_url(url).then(function(set){
      var url = set[0];
      var orgs = set[1];
      if(url){
        resolve(fetch_source(url, orgs));
      }else{
        resolve(orgs);
      }
    })
  })
};

function store_source(source){
  return new Promise(function(resolve, reject){
    promises = [];
    var url = 'http://' + source + '.ureport.in/api/v1/orgs/?format=json&page=1';
    fetch_source(url, orgs).then(function(orgs){
      [].concat.apply([], orgs).forEach(function(org){
        if(!org.subdomain)
          org.subdomain = 'global';
        promises.push(
          new Promise(function(resolve, reject){
            var ref = db.ref(fb + org.subdomain);
            console.log(org.name)
            ref.set(org, function(){
              resolve();
            });
          })
        );
      });
      Promise.all(promises).then(function(){
        resolve();
      });
    })
  })
};

store_source('uk')
.then(function(){
  return store_source('nigeria')
})
.then(function(){
  refUpdate.set({value:  firebase.database.ServerValue.TIMESTAMP}, function(err, response){
    console.log('DONE!');
    process.exit()
    return
  })
})
